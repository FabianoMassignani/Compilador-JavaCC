/* Generated By:JJTree&JavaCC: Do not edit this line. Aula1Constants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Aula1Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEIRO = 5;
  /** RegularExpression Id. */
  int FLOAT = 6;
  /** RegularExpression Id. */
  int STRING = 7;
  /** RegularExpression Id. */
  int BOLLEAN = 8;
  /** RegularExpression Id. */
  int TRUE = 9;
  /** RegularExpression Id. */
  int FALSE = 10;
  /** RegularExpression Id. */
  int IF = 11;
  /** RegularExpression Id. */
  int ELSE = 12;
  /** RegularExpression Id. */
  int FOR = 13;
  /** RegularExpression Id. */
  int WHILE = 14;
  /** RegularExpression Id. */
  int ABRE_CHAVE = 15;
  /** RegularExpression Id. */
  int FECHA_CHAVE = 16;
  /** RegularExpression Id. */
  int ABRE_PARENTESES = 17;
  /** RegularExpression Id. */
  int FECHA_PARENTESES = 18;
  /** RegularExpression Id. */
  int PONTO_VIRGULA = 19;
  /** RegularExpression Id. */
  int IGUAL = 20;
  /** RegularExpression Id. */
  int VIRGULA = 21;
  /** RegularExpression Id. */
  int PONTO = 22;
  /** RegularExpression Id. */
  int MENOS = 23;
  /** RegularExpression Id. */
  int MAIS = 24;
  /** RegularExpression Id. */
  int MAISMAIS = 25;
  /** RegularExpression Id. */
  int MENOSMENOS = 26;
  /** RegularExpression Id. */
  int MAISMENOS = 27;
  /** RegularExpression Id. */
  int MENOSMAIS = 28;
  /** RegularExpression Id. */
  int DIVISAO = 29;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 30;
  /** RegularExpression Id. */
  int POTENCIA = 31;
  /** RegularExpression Id. */
  int OPERADOR_LOGICO = 32;
  /** RegularExpression Id. */
  int IGUALIGUAL = 33;
  /** RegularExpression Id. */
  int MAIOR = 34;
  /** RegularExpression Id. */
  int MAIORIGUAL = 35;
  /** RegularExpression Id. */
  int MENOR = 36;
  /** RegularExpression Id. */
  int MENORIGUAL = 37;
  /** RegularExpression Id. */
  int MENORMAIOR = 38;
  /** RegularExpression Id. */
  int DIGITO = 39;
  /** RegularExpression Id. */
  int CARACTERE = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"Jedi\"",
    "\"Droid\"",
    "\"Sith\"",
    "\"Wookiee\"",
    "\"LightSide\"",
    "\"DarkSide\"",
    "\"ForceAwakens\"",
    "\"DarkSideRises\"",
    "\"MillenniumFalcon\"",
    "\"Lightsaber\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\"=\"",
    "\",\"",
    "\".\"",
    "\"-\"",
    "\"+\"",
    "\"++\"",
    "\"--\"",
    "\"+-\"",
    "\"-+\"",
    "\"/\"",
    "\"*\"",
    "\"**\"",
    "<OPERADOR_LOGICO>",
    "\"==\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"<>\"",
    "<DIGITO>",
    "<CARACTERE>",
    "\"\\\'\"",
  };

}
